{"ast":null,"code":"// import { createContext, useContext, useEffect, useReducer } from \"react\";\n// import axios from \"axios\";\n// import reducer from \"../reducer/ProductReducer\"\n// const AppContext = createContext();\n// const API = \"https://api.pujakaitem.com/api/products\";\n// const initialState = {\n//  isloading: false,\n//  isError:   false,\n//  products:[],\n//  featureProducts: [],\n//  isSingleLoading: false,\n//   singleProduct: {},\n// };\n// const AppProvider = ({ children }) => {\n//   const [state,dispatch] = useReducer(reducer,initialState)\n//   const getproducts = async (url) => {\n//     dispatch({ type: \"SET_LOADING\" });\n//     try {\n//       const res = await axios.get(url);\n//       const products = await res.data;\n//       dispatch({type: \"SET_API_DATA\", payload: products});\n//     } catch (error) {\n//       dispatch({type:\"API_ERROR\"})\n//     }\n//   };\n//   const getSingleProduct = async (url) => {\n//     dispatch({ type: \"SET_SINGLE_LOADING\" });\n//     try {\n//       const res = await axios.get(url);\n//       const singleProduct = await res.data;\n//       dispatch({ type: \"SET_SINGLE_PRODUCT\", payload: singleProduct });\n//     } catch (error) {\n//       dispatch({ type: \"SET_SINGLE_ERROR\" });\n//     }\n//   };\n//   useEffect(() => {\n//     getproducts(API);\n//   }, []);\n//   return (\n//     <AppContext.Provider value={{ ...state,getSingleProduct }}>{children}</AppContext.Provider>\n//   );\n// };\n// // custom hooks\n// const useProductContext = () => {\n//   return useContext(AppContext);\n// };\n// export { AppProvider, AppContext, useProductContext };","map":{"version":3,"names":[],"sources":["E:/project2023/E_commerce/React-Ecommerce-Website/src/Context/ContextProduct.js"],"sourcesContent":["// import { createContext, useContext, useEffect, useReducer } from \"react\";\r\n// import axios from \"axios\";\r\n// import reducer from \"../reducer/ProductReducer\"\r\n// const AppContext = createContext();\r\n\r\n// const API = \"https://api.pujakaitem.com/api/products\";\r\n\r\n\r\n\r\n// const initialState = {\r\n//  isloading: false,\r\n//  isError:   false,\r\n//  products:[],\r\n//  featureProducts: [],\r\n//  isSingleLoading: false,\r\n//   singleProduct: {},\r\n// };\r\n// const AppProvider = ({ children }) => {\r\n//   const [state,dispatch] = useReducer(reducer,initialState)\r\n//   const getproducts = async (url) => {\r\n//     dispatch({ type: \"SET_LOADING\" });\r\n//     try {\r\n//       const res = await axios.get(url);\r\n//       const products = await res.data;\r\n//       dispatch({type: \"SET_API_DATA\", payload: products});\r\n//     } catch (error) {\r\n//       dispatch({type:\"API_ERROR\"})\r\n//     }\r\n//   };\r\n\r\n\r\n\r\n//   const getSingleProduct = async (url) => {\r\n//     dispatch({ type: \"SET_SINGLE_LOADING\" });\r\n//     try {\r\n//       const res = await axios.get(url);\r\n//       const singleProduct = await res.data;\r\n//       dispatch({ type: \"SET_SINGLE_PRODUCT\", payload: singleProduct });\r\n//     } catch (error) {\r\n//       dispatch({ type: \"SET_SINGLE_ERROR\" });\r\n//     }\r\n//   };\r\n\r\n\r\n//   useEffect(() => {\r\n//     getproducts(API);\r\n//   }, []);\r\n\r\n//   return (\r\n\r\n//     <AppContext.Provider value={{ ...state,getSingleProduct }}>{children}</AppContext.Provider>\r\n//   );\r\n// };\r\n\r\n// // custom hooks\r\n// const useProductContext = () => {\r\n//   return useContext(AppContext);\r\n// };\r\n\r\n// export { AppProvider, AppContext, useProductContext };\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}