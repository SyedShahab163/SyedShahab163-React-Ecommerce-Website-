{"ast":null,"code":"// const filterReducer = (state, action) => {\n//     switch (action.type) {\n//       case \"LOAD_FILTER_PRODUCTS\":\n//         return {\n//           ...state,\n//           filter_products: [...action.payload],\n//           all_products: [...action.payload],\n//         };\n//       case \"SET_GRID_VIEW\":\n//         return {\n//           ...state,\n//           grid_view: true,\n//         };\n//       case \"SET_LIST_VIEW\":\n//         return {\n//           ...state,\n//           grid_view: false,\n//         };\n//       case \"GET_SORT_VALUE\":\n//         // let userSortValue = document.getElementById(\"sort\");\n//         // let sort_value = userSortValue.options[userSortValue.selectedIndex].value;\n//         // console.log(sort_value);\n//         return {\n//           ...state,\n//           sorting_value: action.payload,\n//         };\n//       case \"SORTING_PRODUCTS\":\n//         let newSortData;\n//         let tempSortProduct = [...action.payload];\n//         // let tempSortProduct = [...action.payload];\n//         function sortingProducts(a, b) {\n//           if (state.sorting_value === \"lowest\") {\n//             console.log(\"call\");\n//         const { filter_products, sorting_value } = state;\n//         let tempSortProduct = [...filter_products];\n//         const sortingProducts = (a, b) => {\n//           if (sorting_value === \"lowest\") {\n//             return a.price - b.price;\n//           }\n//         }\n//     }\n//           if (state.sorting_value === \"highest\") {\n//             console.log(\"call\");\n//           if (sorting_value === \"highest\") {\n//             return b.price - a.price;\n//           }\n//           if (state.sorting_value === \"a-z\") {\n//           if (sorting_value === \"a-z\") {\n//             return a.name.localeCompare(b.name);\n//           }\n//           if (state.sorting_value === \"z-a\") {\n//           if (sorting_value === \"z-a\") {\n//             return b.name.localeCompare(a.name);\n//           }\n//         }\n//         };\n//         newSortData = tempSortProduct.sort(sortingProducts);\n//         console.log(\"newsoprt dat\" + newSortData[0]);\n//         return {\n//           ...state,\n//           filter_products: newSortData,\n//         };\n//         case \"UPDATE_FILTERS_VALUE\":\n//              const { name, value } = action.payload;\n//         return {\n//           ...state,\n//           filters: { ...state.filters, [name]: value },\n//         };\n//       case \"FILTER_PRODUCTS\":\n//         let { all_products } = state;\n//         let tempFilterProduct = [...all_products];\n//         const { text } = state.filters;\n//         if (text) {\n//           tempFilterProduct = tempFilterProduct.filter((curElem) =>\n//             curElem.name.toLowerCase().includes(text)\n//           );\n//         }\n//         console.log(tempFilterProduct);\n//         return {\n//           ...state,\n//           filter_products: tempFilterProduct,\n//         };\n//       default:\n//         return state;\n//     }\n//   };\n//   export default filterReducer;","map":{"version":3,"names":[],"sources":["E:/project2023/E_commerce/React-Ecommerce-Website/src/reducer/FilterREducer.js"],"sourcesContent":["// const filterReducer = (state, action) => {\r\n//     switch (action.type) {\r\n//       case \"LOAD_FILTER_PRODUCTS\":\r\n//         return {\r\n//           ...state,\r\n//           filter_products: [...action.payload],\r\n//           all_products: [...action.payload],\r\n//         };\r\n//       case \"SET_GRID_VIEW\":\r\n//         return {\r\n//           ...state,\r\n//           grid_view: true,\r\n//         };\r\n//       case \"SET_LIST_VIEW\":\r\n//         return {\r\n//           ...state,\r\n//           grid_view: false,\r\n//         };\r\n    \r\n//       case \"GET_SORT_VALUE\":\r\n//         // let userSortValue = document.getElementById(\"sort\");\r\n//         // let sort_value = userSortValue.options[userSortValue.selectedIndex].value;\r\n//         // console.log(sort_value);\r\n//         return {\r\n//           ...state,\r\n//           sorting_value: action.payload,\r\n//         };\r\n  \r\n//       case \"SORTING_PRODUCTS\":\r\n//         let newSortData;\r\n//         let tempSortProduct = [...action.payload];\r\n//         // let tempSortProduct = [...action.payload];\r\n  \r\n//         function sortingProducts(a, b) {\r\n//           if (state.sorting_value === \"lowest\") {\r\n//             console.log(\"call\");\r\n//         const { filter_products, sorting_value } = state;\r\n//         let tempSortProduct = [...filter_products];\r\n  \r\n//         const sortingProducts = (a, b) => {\r\n//           if (sorting_value === \"lowest\") {\r\n//             return a.price - b.price;\r\n//           }\r\n//         }\r\n//     }\r\n//           if (state.sorting_value === \"highest\") {\r\n//             console.log(\"call\");\r\n//           if (sorting_value === \"highest\") {\r\n//             return b.price - a.price;\r\n//           }\r\n  \r\n//           if (state.sorting_value === \"a-z\") {\r\n//           if (sorting_value === \"a-z\") {\r\n//             return a.name.localeCompare(b.name);\r\n//           }\r\n  \r\n//           if (state.sorting_value === \"z-a\") {\r\n//           if (sorting_value === \"z-a\") {\r\n//             return b.name.localeCompare(a.name);\r\n//           }\r\n//         }\r\n//         };\r\n//         newSortData = tempSortProduct.sort(sortingProducts);\r\n//         console.log(\"newsoprt dat\" + newSortData[0]);\r\n//         return {\r\n//           ...state,\r\n//           filter_products: newSortData,\r\n//         };\r\n    \r\n\r\n\r\n//         case \"UPDATE_FILTERS_VALUE\":\r\n//              const { name, value } = action.payload;\r\n//         return {\r\n//           ...state,\r\n//           filters: { ...state.filters, [name]: value },\r\n//         };\r\n    \r\n//       case \"FILTER_PRODUCTS\":\r\n//         let { all_products } = state;\r\n//         let tempFilterProduct = [...all_products];\r\n  \r\n//         const { text } = state.filters;\r\n  \r\n//         if (text) {\r\n//           tempFilterProduct = tempFilterProduct.filter((curElem) =>\r\n//             curElem.name.toLowerCase().includes(text)\r\n//           );\r\n//         }\r\n  \r\n//         console.log(tempFilterProduct);\r\n  \r\n//         return {\r\n//           ...state,\r\n//           filter_products: tempFilterProduct,\r\n//         };\r\n  \r\n//       default:\r\n//         return state;\r\n//     }\r\n//   };\r\n//   export default filterReducer;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}